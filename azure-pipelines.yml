# Pipeline to Pull Latest Falcon Container Sensor and Push to Your AWS ECR Registry

trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:
- bash: |
    sudo apt-get install -y docker.io
    sudo snap install -y docker
    docker --version
  displayName: 'Get Dependencies'

- bash: |
    export FALCON_API_BEARER_TOKEN=$(curl \
    --silent \
    --header "Content-Type: application/x-www-form-urlencoded" \
    --data "client_id=$env:CLIENT_ID&client_secret=$env:CLIENT_SECRET" \
    --request POST \
    --url "https://$(FALCON_CLOUD_API)/oauth2/token" | \
    jq -r '.access_token')
    export FALCON_ART_PASSWORD=$(curl --silent -X GET -H "authorization: Bearer ${FALCON_API_BEARER_TOKEN}" \
    https://$(FALCON_CLOUD_API)/container-security/entities/image-registry-credentials/v1 | \
    jq -r '.resources[].token')
    export FALCON_ART_USERNAME="fc-$(echo $(FALCON_CID) | awk '{ print tolower($0) }' | cut -d'-' -f1)"
  env:
    CLIENT_ID: $(FALCON_CLIENT_ID)
    CLIENT_SECRET: $(FALCON_CLIENT_SECRET)
  displayName: 'Get Private CrowdStrike Registry Credentials From API'


- bash: |
    export REGISTRYBEARER=$(curl -X GET -s -u "${FALCON_ART_USERNAME}:${FALCON_ART_PASSWORD}" "https://registry.crowdstrike.com/v2/token?=${FALCON_ART_USERNAME}&scope=repository:$SENSORTYPE/$(FALCON_CLOUD_REGION)/release/falcon-sensor:pull&service=registry.crowdstrike.com" | jq -r '.token')
    export LATESTSENSOR=$(curl -X GET -s -H "authorization: Bearer ${REGISTRYBEARER}" "https://registry.crowdstrike.com/v2/falcon-container/$(FALCON_CLOUD_REGION)/release/falcon-sensor/tags/list" | jq -r '.tags[-1]')
    export FALCON_IMAGE_REPO="registry.crowdstrike.com/falcon-container/$(FALCON_CLOUD_REGION)/release/falcon-sensor"
    export FALCON_IMAGE_TAG=$LATESTSENSOR
  displayName: 'Get Latest Sensor Version'

- bash: |
    echo $FALCON_ART_PASSWORD | sudo docker login -u $FALCON_ART_USERNAME --password-stdin registry.crowdstrike.com
    sudo docker pull $FALCON_IMAGE_REPO:$FALCON_IMAGE_TAG
  displayName: 'Pull Container Sensor Image'

- bash: |
    aws ecr get-login-password --region $(AWS_REGION) | sudo docker login --username AWS --password-stdin $(AWS_ACCOUNT_ID).dkr.ecr.$(AWS_REGION).amazonaws.com
    sudo docker tag $FALCON_IMAGE_REPO:$FALCON_IMAGE_TAG $(AWS_ACCOUNT_ID).dkr.ecr.$(AWS_REGION).amazonaws.com/falcon-sensor/falcon-container:$(ECR_IMAGE_TAG)
    sudo docker push $(AWS_ACCOUNT_ID).dkr.ecr.$(AWS_REGION).amazonaws.com/falcon-sensor/falcon-container:$(ECR_IMAGE_TAG)
  env:
    AWS_ACCESS_KEY_ID: $(AWS_ACCESS_KEY_ID)
    AWS_SECRET_ACCESS_KEY: $(AWS_SECRET_ACCESS_KEY)
  displayName: 'Push Container Sensor Image to ECR'